// Code generated for package agentRes by go-bindata DO NOT EDIT. (@generated)
// sources:
// res/vm/docs/docs.go
// res/vm/docs/swagger.json
// res/vm/docs/swagger.yaml
// res/vm/en/messages.json
// res/vm/en/usage.txt
// res/vm/key/id_rsa_test
// res/vm/key/id_rsa_test.pub
// res/vm/zh/messages.json
// res/vm/zh/usage.txt
package vmRes

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resVmDocsDocsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5b\x6f\xdb\xc8\xf5\x7f\x16\x3f\xc5\xfc\xf9\x2f\x16\x52\xa1\x8a\x49\x50\xe4\x41\x0b\xa3\xb5\x2d\xef\xc6\xc0\xda\x16\x6c\x25\x40\xbb\x5d\x64\x47\xc3\x23\x69\x12\x72\x66\x3c\x67\x28\xc7\x15\xf8\xdc\xa2\x7d\x2f\xd0\x0b\x50\x2c\xfa\x2d\x36\x5f\xa7\x09\xfa\x31\x8a\xe1\x45\xd6\x85\x92\xa9\x68\x94\xae\x1f\x6c\x73\x78\xce\x8f\xe7\xc6\x73\x19\x4e\x10\x90\xaf\xcf\x2e\xcf\xae\x8f\x07\x67\x3d\x72\xf2\x1b\x32\x78\x71\x46\x4e\xaf\x2e\x2e\x8e\x2f\x7b\xe4\xf8\xe4\xea\xd5\xd9\x97\xa4\x77\x45\x2e\xaf\x06\xe4\xac\x77\x3e\xf0\x82\x80\x0c\x26\x1c\xc9\x88\x47\x40\xee\x28\x92\x31\x08\xd0\xd4\x40\x48\x86\xf7\x04\xef\xe8\x78\x2c\x03\xfb\xc7\xf3\x14\x65\x6f\xe9\x18\x48\x28\x19\x7a\x1e\x8f\x95\xd4\x86\x34\xbd\x86\x3f\xbc\x37\x80\xbe\xd7\xf0\x41\x30\x19\x72\x31\x0e\xde\xa0\x14\x76\x01\x8d\xe6\x62\x8c\xbe\xe7\x35\xfc\x31\x37\x93\x64\xd8\x61\x32\x0e\x68\x04\xcc\x4c\x64\x4c\x31\x30\x10\xab\x88\x1a\xf0\x97\x29\x16\x1e\xec\x7b\x2d\xcf\x9b\x52\x6d\x9f\x4b\x8e\xc8\xf7\x33\x8f\x10\x42\x7c\x64\x13\x88\x01\xfd\x2e\x99\xcd\x48\x4c\x35\x4e\x68\x44\x3a\x37\xf9\x2a\x49\xd3\x76\x41\x66\x81\x40\xfb\x5d\xe2\x3f\xeb\x3c\xf1\x8b\x55\x2e\x46\xd2\x72\x66\x57\xd9\x4a\x08\xc8\x34\x57\x86\x4b\x61\x69\x67\xb3\x4e\xef\x61\x25\x4d\x0b\xc6\x8c\xd4\x70\x13\x41\x41\x34\xb0\xff\x2f\xdf\x66\x52\x18\xca\xcc\x12\x7c\x76\x43\xd0\x38\x63\x3b\xee\x9f\x93\x9b\x44\x59\xf3\x2d\xf0\x65\x24\x89\x8e\x2c\xc5\xc4\x18\x85\xdd\x20\x58\x30\x08\x50\xbc\x47\x39\x32\xc1\xef\xa7\x01\x47\x4c\x00\x57\x79\x21\xa6\x3c\xe3\xfe\xe5\xf3\x67\xcf\x9f\x3d\xff\xf5\xed\xad\x65\xf4\xe7\x44\xe9\x82\x8c\x53\xd0\xf8\xa0\xe9\xab\xfc\x2a\x4d\x73\xe2\xd2\x74\x13\x89\xa6\xa0\x78\x21\xd1\xcc\xb5\xf4\x87\x14\xa1\x4f\xcd\xa4\xb8\x79\x52\x5c\x3e\x10\x28\x6a\x26\xb8\x6c\xdf\x80\x2a\x1e\x4c\x9f\x06\xd3\xf8\x8e\x6a\x08\x98\x06\xeb\xf4\x35\x1b\xa9\xfc\x99\xcb\xab\xa5\x59\x31\xc9\x1d\xfe\xed\xda\xdd\x8c\x82\x2a\x15\x71\x46\xad\xc3\x8a\x00\x5c\x25\xf9\xae\xbd\x8e\xab\xb4\x0c\x13\xe6\x1e\x17\x93\x38\xa6\xfa\xde\xda\xe8\xc3\x1f\xff\xfe\xe1\xfd\x8f\xff\x7e\xff\xfe\xc3\x9f\x7e\xf0\xab\x44\xa0\x9a\xc6\x60\x40\x6f\x16\x62\xdd\x20\x73\xee\x95\xc8\x3d\x49\x78\x14\x92\x6b\xb8\x4d\x00\x0d\xb9\x1a\xbe\x01\xb6\x1a\x66\x4b\xec\x65\x54\x1a\x8a\x6f\xb7\xd1\xf1\x0c\x7d\x28\xc3\xfb\x6d\x54\x1a\x6e\x13\xae\x21\xf4\xbb\xc4\xe8\x04\xb6\x50\x66\xef\x2f\xad\xf4\xf5\x12\xdd\xcf\x34\x8c\xec\x93\xff\x3f\x08\x61\xc4\x05\xb7\x7a\x62\x10\xca\x98\x72\xd1\xc9\x94\x5d\xf7\x47\xf9\x93\x56\xde\x59\x5f\xad\xf2\x9f\x06\x54\x52\x20\xe0\x46\x11\xfd\x67\x4f\x9e\x6c\x95\x7f\xd5\x35\x4c\x86\x40\x8e\x08\x26\x8c\x01\xe2\xaf\xc8\x53\xd2\x25\x4f\xb6\x59\x73\x3f\x1b\xbd\xb6\x69\xe4\xa5\xe1\x11\x76\xae\x0b\x65\xf6\x37\xd5\xf2\xca\xc3\x55\xba\x94\x3a\x16\xc4\x58\x4e\x03\x55\x32\xad\x25\x01\x73\xaf\xb2\x90\x94\x55\xc1\x6b\x5f\x58\x05\xda\xf0\x0d\x9e\xc9\xac\xbc\xd9\x67\x25\x36\x17\x06\x6c\x5d\x58\x57\xb0\x22\x16\x42\x6a\x36\x7b\x61\x55\xdc\x5a\x88\x31\x20\xd2\x71\x0d\x39\xf3\x0a\x5a\x01\xba\xc9\x0f\x0b\x59\x7e\xe9\x25\x71\x6c\x65\xaa\x54\x51\x02\x3e\x55\x81\x0a\xab\x50\xa5\x5e\x66\x15\xd0\x2d\x26\x4f\xe2\xbe\x2d\xb6\x6e\x83\x62\xa8\xe5\x1d\x82\x1e\xe4\xbc\x0e\x25\x2e\x80\x5f\xcd\x6b\xb4\x4b\x6c\x1b\x0b\xa7\x32\x8e\xa9\x08\xb7\x64\xb6\x4f\x86\x76\x6f\x0d\x26\x63\x15\x81\x81\x01\x8f\x1d\x23\xdb\xec\xec\x1a\x71\xca\x19\x9c\x2b\xb7\xa8\x20\xa6\xaf\xa8\x76\xec\x2d\xbe\x9e\x11\xd6\xf0\x76\x7a\x1d\xde\x02\xa8\x6b\xc0\x24\x32\x5f\xf1\x68\x5b\xd5\x2c\xd1\x87\x52\x46\x40\x2b\xba\xa9\x2a\xf4\xa2\x4b\x71\x68\x00\x21\x43\xe7\x9e\xb2\x98\x07\xc8\x34\x12\x4f\xa9\x81\xaf\x65\xd6\x4d\x3a\x14\x57\xe2\x37\x54\x8c\x5d\x63\xba\x4f\x01\x12\x0f\x92\x0b\x95\xe6\x52\x73\x53\xc3\xa8\x3b\x79\x4b\x69\x39\xd6\x80\x8e\xdf\x57\xa5\xa5\x2d\xd3\x3d\xae\xdd\xe2\xde\x26\x90\xc0\xb9\xeb\x64\xa0\x77\x49\x04\xbb\x88\x9b\x03\x5f\xa0\xe3\xa8\xcd\x61\xdd\x37\x34\xc8\xe2\x63\xc6\x64\x22\x6a\xa4\x84\x5d\x71\xc3\xd0\x7d\x94\x21\x8b\xfb\x14\xf1\x4e\xea\x1a\x11\xb1\x1b\xb0\x9d\x83\x9c\x37\x77\x08\x11\x08\x9e\xc4\x3d\xcd\xa7\xa0\x0f\xe0\x3f\xd0\x9c\xba\x96\xd9\x50\x6d\xdc\x77\x33\x68\xa8\x49\x1c\x87\x83\x01\x34\x37\x0c\x04\xd5\x5c\x6e\x46\x5e\x99\x72\x6d\xa2\xd0\x23\xca\x80\x58\xf6\x0d\xe3\xed\xf6\xb1\x7e\xb0\xf8\xdc\xfa\x92\xc2\x96\xb7\xec\xf1\xe7\x41\xcd\xd1\x6d\x5a\xb7\x16\x89\x24\x1e\xd6\x4d\x98\xd3\xd8\x79\x0e\xbe\x93\xfa\xed\x7e\xe5\xa2\xfe\x88\x79\x59\x35\x73\xef\x39\x61\xba\x6f\xcf\xb9\xe3\x76\x2f\xa2\x68\xae\x61\xcc\xd1\x80\xee\x55\x6d\x67\xee\x85\xee\xbe\xe5\x95\xd8\x8f\xa8\x19\x49\x1d\xff\xf4\x7b\x3e\xe5\xbe\x8d\x46\x9c\x1c\xa0\x39\xc7\xfb\x03\x74\xd1\x87\xc9\x31\x82\x1d\xa4\x69\xf8\x9c\x89\xc6\x66\xea\xbe\x96\x0c\x10\xe5\xfa\x13\xf7\xdd\x39\x9c\xf0\x28\xd4\xb0\xc5\xec\xab\x1b\xba\x54\x90\x21\x90\x79\xc5\x6b\x93\xb9\x6c\x9d\x4d\x85\xaf\x14\x91\x6a\x4d\x37\x6d\xa5\xfb\xdc\x40\xbc\xd9\x4b\x55\xaa\x56\x12\x56\x6c\xdf\x56\xef\xb0\xc4\x20\x8c\xe3\xa8\x08\xa9\xa1\x37\x46\xea\x2d\x79\x61\xc5\x9a\x68\xa9\xb3\xa6\x81\x58\x66\x12\x49\x1a\xe6\x9f\x21\x7b\xd4\xd0\x6f\xa4\x54\x0f\x9e\x7f\xc4\xb8\x95\xfe\x9f\x53\xd1\x30\xcc\xea\x3f\x8d\xfa\x8b\x11\x61\x74\x02\xf5\x54\x83\x11\x4d\x22\xc7\x2d\x3d\x88\xf0\x5c\x84\xf0\xce\x71\x7a\x82\x77\xca\xf1\xc4\xc8\xf1\x4a\xb0\x1a\xd9\x7e\xa7\xfd\x1d\x8e\xd7\x54\xd4\xe8\x80\x76\x02\x8d\xa4\xac\x51\xf1\x77\x32\xa7\xfb\xa2\xac\xa8\x06\x61\x9c\x77\x7f\xca\xf9\x2c\x94\xcf\xc8\x5b\xb2\xc4\xca\xeb\x5c\xd2\x7f\xa6\x3c\xb8\x49\x15\x52\x3b\x0f\xa2\x4c\x74\x9d\xc0\xde\x69\x2a\xd3\x8e\x7b\xd8\x6c\x7a\x3c\x44\xa2\x30\xce\x5b\xb8\x29\xd5\x97\xce\x5f\x97\x02\xb4\x2f\xd1\x8c\x78\x0d\x1b\x38\xea\x39\x36\x4e\xc1\x3f\xb9\x21\xe7\x00\x19\x6a\x63\xbf\x35\x27\x79\x74\xba\x7e\xa8\xdc\x9f\xa9\xff\xdd\xd1\xbd\x15\x5b\x07\xfb\x7e\x20\x1d\xd7\xeb\xa9\xf6\xcd\x7f\x5b\x4d\x9f\xcd\xe5\x7b\xa4\xc4\x03\x7c\x22\x4b\x34\x35\x5b\x5d\xbb\xda\x15\x02\x6b\x13\x3e\x22\x08\xa6\x4d\x6c\x45\x3f\x95\x89\x30\xe4\x8e\x47\x51\xd6\x7b\x8f\x85\xed\x31\x1f\x29\x32\xbb\xb5\x4c\x5a\x4b\x7d\xcc\xb6\x4b\xf9\x29\xba\x8f\xa4\x86\x29\xd4\x68\xc7\x76\xee\x72\x4e\xeb\x6d\x31\xff\x8f\x5b\x9d\xfc\x65\xbd\x1a\x0d\x26\x1a\x68\x9d\xcf\xcf\xbb\x7e\x77\xf9\xdc\x69\x4a\xd3\x58\xbd\x54\x7d\xd0\x5c\x6e\xe9\xdf\xd6\x03\xda\x69\xb8\x1e\x2e\x57\x7a\xf9\xef\xf4\x7b\xcf\xb3\x18\xa4\x38\x4b\x79\x2e\x46\x92\xa0\xd1\x09\x33\x64\xe6\x35\x8a\x6f\x73\x19\x4b\x1e\x0d\x5e\xe3\x85\x44\x53\xc2\x94\x6b\xe5\x31\xc1\xc5\xb5\xf2\xb8\xa6\xfd\xf9\xf6\xbb\x72\x35\x3b\x54\xb9\xc2\xbd\x70\x1a\xb3\x5c\x4b\x3d\x2f\x08\xc8\xcd\x82\x50\x13\x19\x85\x48\xe0\x9d\x92\xda\x40\x58\xde\x22\xb9\xc0\x92\xb0\x88\xdb\x9c\x4c\xec\xd8\x1e\xcb\x90\x8f\xee\x09\x37\xd9\xd1\xd2\x45\x90\xa3\x45\x3d\x1f\xf4\xeb\xe6\xc6\x7c\x9a\x1d\x22\xcd\x14\xec\xce\x2d\x6c\x57\x4a\xf5\xba\xf3\x95\x42\xb9\xee\x92\x76\xb3\xb4\x5d\x28\x58\xb2\xfb\xbf\x3d\xb6\xa5\xe2\x3f\x7f\xfd\xdb\xc7\x3f\xff\xf3\xe3\x3f\x7e\x3c\xee\x9f\x7f\xfc\xcb\x1f\x3e\xfe\xf0\x2f\x8b\xb1\xa0\x76\x37\x43\x4d\x4b\x5f\x14\x1e\x98\xa5\x9e\x37\x4a\x04\x23\x4d\x24\x3f\xc7\x16\xb9\x06\x1a\xf6\x24\x6b\xb6\x0a\x2b\x59\x0f\x61\xa6\x57\xf7\x68\x51\xcd\x62\x75\xf1\x94\xab\xd5\x3c\x3f\xaf\xdb\xb9\x06\x15\x51\x06\xcd\x35\x9a\x36\xf1\x7f\x27\x7c\xfb\x3b\xfb\xf3\x8b\xa7\x2d\xcf\x6b\x98\x36\x01\xad\xed\x03\xca\xd3\xbc\x9d\x4b\xb8\x6b\x96\x67\x6f\x5f\x67\xa7\x6d\x5b\x9d\xaf\x12\xc1\xb0\x39\x27\xb1\x97\x17\x54\xcd\xbc\x46\xc3\x2f\xce\xef\xfa\x5d\x62\x75\x69\x4e\x1f\xb6\x54\x66\xe9\xa2\x26\x8d\x06\x6d\x93\xd7\xf6\x49\x6f\x50\x8a\xce\x45\xce\xd6\x9c\xb6\xec\x2d\x0d\x26\xd1\x65\x74\x34\xa9\x5d\xb3\xc6\x4e\x5b\x9d\x3e\xd5\x08\xcd\x50\xb2\x96\xd7\xe0\xa3\x4c\xd8\xff\x3b\x22\x82\x47\x19\x66\xc1\x17\x4a\xe6\x35\x52\xcf\x6b\xd8\x80\x30\x2a\x22\xd9\xb1\xe6\xce\x49\x32\x1a\x81\x9e\xf3\x59\x25\x3b\x67\xef\x80\x25\x06\x9a\x5f\x18\x15\xb5\x49\x66\xa4\xd6\x97\x8f\xc1\x16\xd7\x46\x45\x9d\x9b\x5c\xc4\x96\x57\x3a\xcf\xe6\xa2\x66\x2b\xf3\xd5\x1d\x1d\x77\xca\x4d\xe5\x66\x76\x65\xfb\xdd\x36\xf9\x02\x67\xa9\x65\xf8\x6f\x00\x00\x00\xff\xff\x7d\x04\x4e\xd0\xe0\x2d\x00\x00")

func resVmDocsDocsGoBytes() ([]byte, error) {
	return bindataRead(
		_resVmDocsDocsGo,
		"res/vm/docs/docs.go",
	)
}

func resVmDocsDocsGo() (*asset, error) {
	bytes, err := resVmDocsDocsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/docs/docs.go", size: 11744, mode: os.FileMode(420), modTime: time.Unix(1639990314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmDocsSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x59\xdb\x6a\x1c\x47\x13\xbe\xf7\x53\x34\xfb\xff\x97\x42\x2b\x8b\xe0\x0b\x41\x48\x14\x89\x04\x81\x63\x2f\xb2\xec\x8b\x84\x10\x6a\x67\x6a\x77\xdb\x9e\x3e\xa8\xaa\x7a\x65\x25\xe8\x3a\x21\xb9\x0f\xe4\x00\xc1\xe4\x2d\xec\xd7\x89\x45\x1e\x23\xcc\xec\xc1\xda\x9d\x83\x66\xbc\xbd\x8a\x7d\x61\xd0\x4e\xf5\x37\xd5\x55\xd5\x5f\x7d\xd5\xf3\xfd\x3d\xa5\x94\xea\xf1\x05\x8c\xc7\x48\xbd\x03\xd5\xdb\xdf\xdd\xeb\xed\xcc\x7e\xd5\x76\xe4\x7a\x07\x6a\x66\x53\xfc\x22\x5a\x32\xcc\xad\xbe\x3a\x1c\xa3\x95\x7f\x7e\xfd\xed\xfa\xe7\x3f\xaf\xff\x78\x7d\x38\x38\xb9\xfe\xe5\x87\xeb\x57\x7f\xcd\x97\x16\xc6\x89\xb3\x02\x89\xac\x20\x14\x0f\x2c\x98\x02\xe4\x70\x70\xa2\x9e\x04\xef\x1d\xc9\x8d\x75\x85\x49\xa0\x2c\xb7\x98\x88\x78\x3e\xe8\xf7\xc7\x5a\x26\x61\xb8\x9b\x38\xd3\x47\xe0\x4b\x76\x23\xe9\x7f\x37\xed\x6b\xe6\x80\xbc\xbe\x16\x0d\xe8\x62\xf5\x47\x0f\xf6\x1f\xec\x3f\xf8\xf4\xfc\x3c\x5f\xd8\x5b\x1a\x5d\xdd\xf0\x71\x8a\xc4\xda\xd9\xdc\xfa\xfe\xee\xde\xcc\x66\xfe\xbc\xe7\x41\x26\xbc\xba\xff\x3e\x78\xdd\x9f\xde\xef\x4f\xcd\x05\x10\xf6\x13\x42\x10\x2c\x6f\xd0\x3b\x2e\x6f\x7b\x11\x13\x0e\x06\x73\xd8\xaf\x4b\x4f\x0b\x0b\xf0\x3e\xd3\x09\x88\x76\xb6\xff\x9c\x9d\xed\x95\xcc\xbe\xd9\x29\xe3\x7a\x72\x69\x48\xe2\xe3\x72\x30\x06\xe8\x32\x8f\xcf\xdb\x1f\x7f\x7f\xfb\xe6\xf5\xdf\x6f\xde\xbc\xfd\xe9\x55\xaf\xca\x05\x20\x30\x28\x48\xf5\x4e\x94\x03\xb2\x5c\x9d\x22\x27\xa4\xbd\xcc\x93\xf1\x59\xd0\x59\xaa\x4e\xf1\x3c\x20\x8b\x7a\x3c\x7c\x8e\xc9\x7a\x8d\xac\x2c\x5f\x94\x94\x00\xbf\x68\xb2\xd3\x05\xfa\xd0\xa5\x97\x4d\x56\x84\xe7\x41\x13\xa6\xbd\x03\x25\x14\xb0\xc1\x92\x93\x09\x1a\xa8\xcc\xf5\x8a\xdd\xff\x09\x47\xf9\x9b\xff\xd7\x4f\x71\xa4\xad\xce\xf7\xc9\xfd\xd4\x19\xd0\x76\xb7\xd8\x6c\x39\x1f\x8b\x7f\x57\x95\x4f\xca\xbf\x56\xe5\x8f\x90\xbd\xb3\x8c\x5c\xeb\x62\x6f\x7f\x6f\xaf\xd1\xff\xf5\xd4\x24\x2e\x45\xf5\xb1\xe2\x90\x24\xc8\xfc\x89\xba\xaf\x0e\xd4\x5e\x53\x34\x37\x8b\xd1\xb7\x39\x07\x3c\x15\x9d\xf1\xee\xe9\x7c\x33\x9b\x87\x6a\xf5\x97\x77\x7f\x5d\xad\x10\xc0\x0d\x37\x56\x69\xa0\xca\xa7\x12\x09\xc8\xa5\x2f\x4a\xd2\x55\x15\x6f\x7e\x60\x3d\x92\xe8\x9a\xcc\x14\x51\xae\xcf\xd9\x02\x5b\x5b\xc1\x9c\xb7\xcb\x1b\xac\xa8\x85\x14\xa4\x3e\x0b\xeb\xee\xb6\x42\x34\xc8\x0c\xe3\x16\x7e\xb2\x90\xb6\xe3\x0a\xd0\xba\x3c\xdc\xa0\xe8\x95\x43\x12\x39\xca\xe0\xfd\x00\x64\xb2\xc1\x06\x2a\xa2\x02\xde\x3f\x2d\xda\x57\x5c\x4c\x1d\xcc\x20\xef\x94\x71\x8b\x62\x48\xee\x82\x91\xce\x66\x6b\x23\x7a\x3c\x07\x7e\xb6\x6c\xb0\x31\xb1\xf3\x5a\x38\x72\xc6\x80\x4d\x1b\x98\xed\xbd\xa1\xe3\x47\x23\x71\xc6\x67\x28\x78\xa6\x4d\x64\xe4\x9c\x9d\x63\x23\x4e\x75\x82\x27\x3e\x2e\x2a\xda\xe9\x33\xa0\xc8\xd9\xd2\x65\x46\x28\xe1\x75\x3a\x0e\x2f\x10\xfd\x29\x72\xc8\xe4\x73\x9d\x35\x75\xcd\x05\xfa\xd0\xb9\x0c\xa1\x42\x4d\x55\xa1\xcf\x55\x4a\xc4\x00\x58\x97\x46\xcf\x54\x8e\xb9\x05\xa6\x71\x7c\x04\x82\x5f\xb8\x42\x4d\x46\x74\xd7\xf1\x43\xb0\xe3\xd8\x98\xf1\x29\xc0\xf1\x56\xb8\xd0\x93\x76\xa4\xa5\x45\x50\x3b\x65\xcb\x93\x1b\x13\x72\xe4\xf3\xea\xc9\xe5\x6d\xfa\x58\x53\x5c\xdc\xf3\x80\x01\x4f\x62\x93\x01\x75\x21\x82\x2e\xee\xce\x80\xbf\xe4\xc8\x55\x3b\x83\x8d\x2f\x68\x38\x31\x87\x49\xe2\x82\x6d\x41\x09\x5d\x71\xd3\x34\x7e\x95\x71\x62\x06\xc0\x7c\xe1\xa8\x45\x45\x74\x03\xce\xe7\xa0\xe8\xe2\x8e\x31\x43\xab\x83\x39\x26\x3d\x45\xda\x42\xfe\x90\x34\xc4\xf6\x59\x80\x24\xbe\x9a\x61\x01\x09\x91\xcb\x41\x90\xe5\x49\x82\x16\x48\xbb\x7a\xe4\xb5\x29\x37\x27\x0a\x1a\x41\x82\x2a\x5f\x5e\x33\xde\x36\x8f\xf5\x67\x37\xdf\xdb\xde\x53\x6c\x38\x65\xb7\xbf\x0f\x5b\x8e\x6e\xd3\xb6\xbd\xc8\x06\x33\x6c\x4b\x98\x53\x13\x9d\x83\x2f\x1c\xbd\xd8\xac\x5d\xb4\x1f\x31\x1f\x55\xcd\xdc\x1b\x4e\x98\xf1\xe5\xb9\x8e\x2c\xf7\x32\x60\x39\xc5\xb1\x66\x41\x3a\xae\xba\xce\xdc\x08\x3d\xbe\xe4\x75\x3c\xc8\x40\x46\x8e\xcc\x87\xaf\xf9\x7c\x7c\x19\xcd\x3c\xd9\x82\x38\xe7\xcb\x2d\xa8\xe8\xed\x70\x8c\x4d\xb6\x22\x1a\xee\x92\x68\x72\xa6\x1e\x90\x4b\x90\xd9\x95\xdf\xb8\xe9\xcd\xe1\x44\x67\x29\x61\x43\xd8\xd7\x2f\x74\xc1\xaa\x21\xaa\x65\xc7\xdb\x51\x4b\xdf\x76\xeb\x1a\xdf\xc2\x45\x20\x82\xba\xab\xf4\x9e\x16\x34\xf5\x59\xaa\xda\x6a\xa5\x61\xc5\xf5\x6d\xf5\x0d\x8b\x41\x2b\x91\xab\x22\x05\x81\x27\xe2\xa8\x81\x17\xd6\xa2\xc9\xb9\x75\x21\x1a\x54\xbe\x58\x65\x0e\x52\x4c\xd5\xf0\x52\x1d\x83\xc0\x43\xe7\xfc\xbb\xcc\xdf\x12\xdc\xca\xfc\x2f\xad\x20\x4d\x8b\xfe\x0f\xd9\xe0\x66\x45\x08\x05\x6c\xb7\x35\x1c\x41\xc8\x22\x4b\x7a\xb4\xe9\x89\x4d\xf1\x65\x64\x7a\xc2\x97\x3e\xf2\xc4\xa8\xf9\xb1\x4d\x5a\xb0\x7d\xa7\xfb\x1d\xcd\xa7\x60\x5b\x28\xa0\x4e\xa0\x99\x73\x2d\x3a\x7e\xa7\x70\xc6\x6f\xca\x1e\x08\xad\x44\x57\x7f\x3e\xfa\x2c\x34\x9b\x91\x1b\x58\x62\xed\x38\x2f\xec\xef\x88\x07\xeb\xb6\xa2\x5a\xf3\x20\xbb\x40\x6d\x0a\xbb\xd3\x54\x46\x91\x35\x6c\x31\x3d\x6e\x83\x28\x24\xba\x84\x9b\x02\x3d\x8a\x7e\x5c\xe6\xa0\x03\xc7\x32\xd2\x2d\x62\x10\x49\x73\xd4\x4e\xc1\x1f\xdc\x90\xb3\x05\x86\xaa\xd5\x5b\x4b\x93\x5b\xa7\xeb\x77\x9d\xfb\x8e\xf4\x6f\xc7\xf4\x56\x5c\x1d\x6c\xfa\x81\x74\xdc\x4e\x53\x6d\xca\x7f\x8d\xa1\x2f\xe6\xf2\x0d\x28\x71\x0b\x9f\xc8\x02\x81\x34\xa6\x76\x5d\x15\x62\xb2\xa3\xf4\x48\x31\xca\x8e\xca\x3b\xfa\x91\x0b\x56\xd4\x85\xce\xb2\x42\x7b\x8f\x6d\xae\x31\x6f\x69\x32\xdd\x24\x13\x91\xa3\xc3\xa4\xd9\xcb\xf7\xd9\xfb\xc8\x11\x4e\xb1\x85\x1c\xeb\xac\x72\x8e\xda\x5d\x31\xff\xc7\x52\x67\x76\x58\x1f\x8f\xce\x26\x84\xd0\xe6\xf3\x73\xd7\xef\x2e\x77\x4d\x53\x04\xc6\x3f\xf5\x03\x24\xed\x1a\xf4\x5b\xb9\xa0\xa3\x96\xeb\xf6\xb8\xf2\xde\xec\xff\xab\x7f\x03\x00\x00\xff\xff\xd5\xf0\xb9\x86\xeb\x28\x00\x00")

func resVmDocsSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_resVmDocsSwaggerJson,
		"res/vm/docs/swagger.json",
	)
}

func resVmDocsSwaggerJson() (*asset, error) {
	bytes, err := resVmDocsSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/docs/swagger.json", size: 10475, mode: os.FileMode(420), modTime: time.Unix(1639990314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmDocsSwaggerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xcd\x6e\x1b\x37\x10\xbe\xeb\x29\x08\xb7\x80\x2e\xa9\xd7\x31\x8a\x1c\x04\x14\xad\x6b\xa3\x85\x81\x34\x11\x1c\x27\x87\x5e\x0a\x8a\x1c\x49\x4c\x96\x1c\x7a\x66\x56\x8a\xfa\x02\x2d\xda\x7b\x81\xfe\x00\x45\xd0\xb7\x48\x5e\xa7\x31\xfa\x18\xc5\xae\x64\x49\x9b\x95\x48\x25\xb9\xd9\xd4\xc7\xd9\xf9\xf9\xe6\x9b\xd9\xb5\x30\x76\xc1\x89\xc3\xc0\x83\x9e\x52\x3f\x4c\x45\xe2\x53\x71\x25\x1f\x5f\x01\x47\x0c\x0c\xf5\xb1\x52\x91\x30\x02\x89\x03\x5e\xfe\xaf\x94\x41\x0b\x77\x7f\x2b\x25\x8b\x08\x03\xe5\x82\xc0\x04\x68\x75\x6a\xb5\xe8\x77\x11\x38\x7a\x0e\x46\x56\x87\x1e\x98\xf5\xa4\x63\x85\x85\x5c\x98\xf4\x76\x5c\xb2\xe8\xb5\x0b\xc7\x5f\x57\xae\xb4\xfb\xfc\xd2\x31\x0e\xb5\x4c\x13\x46\x1b\xcc\x53\x2a\x73\x10\x57\xf9\x21\x92\xa4\x83\x1c\x11\xce\x19\xe8\xba\xfe\x29\x65\x6f\x85\x7b\x06\xc4\x0e\x43\x1a\x5a\x87\x77\x8e\xde\xeb\x60\x39\x8f\xcc\x3e\xda\xa0\x8f\x25\x08\x5c\x3b\x9f\x06\x5a\x60\x93\x01\xcc\x9c\x81\xcb\x98\x04\x41\x98\x3d\xd3\x94\x76\xdc\xd9\x74\x56\x5f\x00\xc4\x2b\xe0\xaa\x94\x6f\x5c\x09\x1d\x5b\x23\xc4\x12\x74\x58\x9d\x06\x9d\x89\x2b\xa0\xcd\x39\x5d\x43\xf2\xc5\x46\x3e\xd7\x02\xdf\x22\x2d\x92\xc6\x90\x1f\xea\x30\xc9\x40\xb2\x65\x43\x3e\x84\x2c\x91\x1c\x92\x93\x8e\x43\x6d\xc7\x23\xe1\x84\x80\xd3\x45\x89\x84\x75\x9f\x5d\x38\x4a\xc2\x6e\x2a\xa8\xe0\x32\x53\x40\xda\x5f\xbc\x96\xb1\x25\xee\x3b\x4e\x67\x6b\x89\xca\xb6\x35\x1b\x7f\x66\x0c\x56\xa1\x53\xc6\x0e\xcc\xda\x6c\x3a\xd8\xf8\xa1\x66\x9e\x23\x75\x62\x7d\x07\x47\x2e\x4a\x4e\x4f\x18\x4a\x08\xae\xf2\x17\xe4\x66\x40\xf9\x50\x80\x9c\xce\x58\x14\x4d\x92\xed\x69\x16\x2d\x55\x3a\x50\x01\x96\x27\x06\x82\x26\x87\x1b\xe0\xa7\x04\xe3\x81\xea\x7f\x52\x6c\x8d\x88\x62\x25\xc0\xd7\x5b\x37\xfa\xeb\x1b\xb5\x7c\xd4\xa9\xa8\x29\xdb\xd0\x81\xc6\xda\x40\x63\x7e\xfb\x49\x20\xef\xf1\x10\x90\x3b\xfb\xb3\xdd\xcd\x10\x2a\x3f\x5a\xb3\x6e\xe6\x73\xbc\x9c\x23\xbd\x48\x13\x7c\xf7\xc8\x79\xb4\x9e\x76\xdd\x89\x93\x95\x4d\x97\xd6\x9e\x52\xb3\x5c\xc1\xc4\xb1\x00\x5d\x68\xc9\x68\x59\x4e\xec\x90\x87\xa5\x96\x31\x92\xff\x58\x01\x8a\x59\x3d\x64\x9e\xe6\x45\x93\x17\x79\x39\x3c\xa8\xb8\xc1\x1c\xd2\xb6\x1f\x5a\xe1\x9a\x6e\x43\x42\x03\xcc\x48\x7b\x97\x9e\xa9\x2b\x2d\xc1\x96\xa3\x2d\xd2\x1b\x1d\xd4\x08\x36\xdc\xbf\xa7\xd6\x16\x8f\xd7\x37\x9c\x80\xdf\x0a\x61\xe7\x66\x74\x77\xa8\x89\xf4\x62\x33\xc6\x3d\x04\x49\x47\x5f\xef\x5c\x4f\x04\x69\xab\xb2\xda\xda\xa6\xb1\x74\x39\xdc\xc4\xa3\x84\x2a\xd8\x1d\x04\xd7\xd7\x9b\x56\x6d\xac\xa9\x12\xb5\x05\xab\x46\x0b\x75\xa1\x45\x3f\x44\x8c\xeb\xa0\x52\xcb\x9d\x85\xb1\xae\xca\xb4\x12\x43\xb0\x97\xc1\xc2\xcb\x34\x81\xe0\x65\x4c\x4f\x24\xc7\x8f\x83\xe9\x70\xb9\xbd\x24\x38\xbe\xd2\xa1\x23\x0e\x6d\x4c\x89\xd8\xe9\xd4\xb6\x2b\xd9\xee\x8b\x9a\x20\x48\x4e\x85\x62\x4e\xfe\x97\x03\x8f\xf7\xd0\x6c\xf5\x6b\x8e\x51\x2d\x8b\xbb\x18\xc5\x58\x51\x37\x6f\xed\xf1\x41\x69\x69\x6b\x86\xd0\x01\x35\x94\x9c\xd8\xcc\x34\x3d\xca\x25\x77\x85\x19\x22\xcb\xd8\x75\x1e\x78\x50\x87\xb7\xe7\xdc\x07\x68\x79\x9e\x01\x6d\x0d\x51\x07\x4c\xb9\x75\x3f\x1d\x3e\xeb\x12\x11\xde\xcd\xd7\x1d\xaf\x46\x93\xb6\x7e\x74\x78\x93\x72\xb4\x9e\x80\xfd\x04\x99\xf2\x2f\x0f\x15\x69\x69\x45\xd5\x96\x1d\x30\xf7\x94\x1b\x2b\x06\xb9\xd7\x74\xe2\x79\xbd\xc8\xa9\xb9\x2b\xcb\x46\x53\x27\x01\x09\xd2\x3a\x41\x84\x74\x66\x24\xb7\x32\x8f\x91\x60\x06\x1d\x49\xe9\x6a\xc1\xf9\xae\x55\xf2\x3d\x05\x61\x59\xb3\xc7\xe3\xeb\x29\x81\xee\xbe\xce\x75\xd6\xf4\x8f\xe6\x0e\x69\x1f\x9f\xc6\x21\x90\x43\xbb\x3f\xd5\x49\x37\xde\x93\x7e\x2e\x8c\x9b\x7e\x32\x18\x44\x9b\x55\xc2\xc0\x6b\x57\x0e\xd4\xe7\x0f\x4e\x1f\x9c\x3e\xf8\xea\xe6\xe6\xd8\xa0\xef\xad\x33\xa6\xce\x86\x97\xea\x49\x15\xeb\x15\xa3\x39\xad\xa8\x1c\xa8\xa9\x48\xe4\x41\x51\x4c\x9c\x4c\xab\x51\x7d\xa3\x00\xcd\x0b\xc6\xb1\x14\x3f\xce\x0a\xc7\x5c\x41\xad\x7a\xe2\xa4\x84\x81\xfa\xfe\xac\xe6\xf3\x7f\xbf\xff\x71\xfb\xeb\xdf\xb7\x7f\xbd\x3e\x1b\x5e\xde\xfe\xf6\xd3\xed\xab\x7f\x7a\x9b\x08\xd4\xd1\xfd\xe3\x93\xa3\x5e\xad\xb7\x4d\xea\x0b\x1d\x5d\x31\xbb\x5f\xcc\xfc\x5c\x13\x14\x86\x60\xbd\x6f\x45\x64\xd9\x7c\xdb\x08\x5c\xf9\x4d\xe3\x7c\xa6\x74\x8c\xa5\x33\x0d\x7f\x8b\xe7\x8c\x61\x23\xf7\xda\x83\x00\x6d\x41\x5b\xa9\x6e\x3e\x55\xa8\x2b\xb8\xa9\xea\x79\xfa\xb8\x3d\xe3\x5d\xa8\x59\x67\x17\xeb\x83\x65\x6e\x44\xf3\x8b\xf5\x11\xc1\x4d\xe5\x08\xec\x3b\x13\x9b\xcd\x14\xbc\x3e\xb4\x77\x1b\x2f\xfa\x1b\x92\xd9\xca\x1c\x10\x1c\xad\xbe\x00\x6d\x91\xf6\xe8\xf4\xe4\xe4\x68\xfb\xa9\xad\x60\xfb\x06\x2d\xa8\x2f\x14\x57\xa6\xe6\xe4\x97\xea\xbe\x1a\xa8\x93\xfe\x16\xbc\xeb\xf6\x1e\xc7\x77\x7c\x88\xba\xb3\xc3\x95\xf7\x9a\x16\x03\xf5\xf6\xe7\x3f\xdf\xbe\x79\xfd\xef\x9b\x37\x6f\x7f\x79\xd5\xe3\xb9\x9e\x4c\x80\x06\xea\xe8\xb4\xae\xf8\xff\x01\x00\x00\xff\xff\xf1\x2a\x9f\xeb\xd8\x12\x00\x00")

func resVmDocsSwaggerYamlBytes() ([]byte, error) {
	return bindataRead(
		_resVmDocsSwaggerYaml,
		"res/vm/docs/swagger.yaml",
	)
}

func resVmDocsSwaggerYaml() (*asset, error) {
	bytes, err := resVmDocsSwaggerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/docs/swagger.yaml", size: 4824, mode: os.FileMode(420), modTime: time.Unix(1639990314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmEnMessagesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xd1\x8e\x9b\x30\x10\x45\xdf\xf9\x8a\x2b\x56\x68\x5f\x68\x3e\x80\xdf\xa8\xf6\xa9\xaa\x8c\x17\x26\xc8\x92\xb1\x91\xc7\xb0\xd5\x46\xf9\xf7\xca\x06\x27\x55\x5b\xc0\xda\x97\xc8\xf2\x9c\xb9\xd7\x93\xb9\xc9\xad\x00\x4a\x2d\xcd\x30\xcb\x81\xca\x06\x25\x99\x6f\x6f\xdf\xcb\x3a\x5c\x8f\xc4\x2c\x07\xe2\xb2\xc1\x8f\x02\x00\x6e\xf1\x13\x28\x55\x1f\xd0\x39\x54\x23\x1a\x2f\xbd\x93\x86\xb5\xf4\xca\x9a\x50\x7d\x0b\xd5\xa6\x8c\xd5\x7b\xfd\xbf\x7e\x9e\xbb\x8e\x98\x85\xb7\xc2\xd1\xa0\xd8\x93\xdb\x55\xdb\x58\x78\x8b\xc4\xa2\xe2\xcb\x91\xfc\x55\x2a\x9d\xa5\x1d\xc0\xbf\x84\x6b\x38\xe2\xc9\x1a\x26\x28\x46\xb5\x1c\x1a\xb1\x97\xce\x0b\x26\xb7\x1c\x0d\x10\x20\xac\x10\xac\x41\xc5\xb8\x5c\xb2\xde\x9f\x25\x9f\x66\xf8\xd7\xa6\x06\x39\x17\xa7\xc8\xfb\xba\x94\x51\x5e\xf4\xef\xa7\x4e\x81\x43\xff\xfe\x05\x87\x4f\x35\x09\x4f\xec\x85\x23\x9e\xb5\x3f\x75\xfa\x54\x13\x02\x8f\x95\xe7\x1a\xbd\x62\x8f\xd7\x8a\x5f\xc3\x71\xdd\xd7\x55\x69\xe2\xed\x8e\x9c\xb3\x0e\xd5\xcb\xf1\xda\xd2\x73\xe6\x49\x5b\xd9\x8b\x28\x70\xfa\x96\x15\x5e\xdd\xa2\x51\x93\x3b\xf5\x24\x1d\x53\x32\x4b\xe9\x3a\xf5\x8b\x5d\xc9\x35\x74\xe5\x99\x6e\x36\xec\xa5\x9f\xf7\x87\xda\x64\x57\xea\x91\xfa\x9c\x4d\x2a\x4d\xa2\xb7\x1f\x26\xf4\x53\xbf\x3f\x85\xd2\x14\x92\xfe\x44\xf3\x65\x05\xcb\xe5\x40\x3a\x56\xff\x10\x46\xf2\x92\xd9\x39\xa4\x5f\xd4\x89\xce\x8e\xa3\x34\x07\x23\x6c\x8b\x08\x30\x36\x18\x6d\xc5\x2d\x94\x89\xe1\x0b\xe7\x14\xb9\xb6\x7a\x59\xda\x43\xef\x0f\x67\xcd\xf0\x58\xbf\xb8\x5a\x37\xca\xfd\x5f\x40\xa4\x9f\x7f\x45\x2b\x1d\x43\x9e\x4c\x0a\xe0\x67\x71\x2f\x7e\x07\x00\x00\xff\xff\x8b\x57\x6d\x2f\xc7\x05\x00\x00")

func resVmEnMessagesJsonBytes() ([]byte, error) {
	return bindataRead(
		_resVmEnMessagesJson,
		"res/vm/en/messages.json",
	)
}

func resVmEnMessagesJson() (*asset, error) {
	bytes, err := resVmEnMessagesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/en/messages.json", size: 1479, mode: os.FileMode(420), modTime: time.Unix(1622602850, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmEnUsageTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func resVmEnUsageTxtBytes() ([]byte, error) {
	return bindataRead(
		_resVmEnUsageTxt,
		"res/vm/en/usage.txt",
	)
}

func resVmEnUsageTxt() (*asset, error) {
	bytes, err := resVmEnUsageTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/en/usage.txt", size: 0, mode: os.FileMode(420), modTime: time.Unix(1615634507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmKeyId_rsa_test = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x97\xb5\x12\xac\x88\x02\x44\x73\xbe\xe2\xe6\xd4\x2b\xdc\x42\xdc\x5d\x87\x0c\x98\xc1\xdd\xe1\xeb\x5f\xdd\xdd\x74\x3b\xed\xec\x54\x77\x70\xfe\xf7\x37\x9c\x28\xab\xd6\x1f\xcf\x67\xff\x38\x9e\x1a\xb1\x81\xf8\x47\x17\x3f\xff\x34\x80\xa9\xaa\x9a\xee\xaa\x1c\xcb\xea\x3c\x5b\x89\xec\xf9\x83\x7d\x2c\x96\xc8\xbd\x6c\xbc\xec\x32\x5f\xe2\x11\x70\x56\xcd\x19\x35\x5e\x8c\x90\x3c\xa3\x30\x70\x15\x23\x13\x62\xaf\x23\xfb\xe5\x85\x73\xe0\x53\xd0\x15\x13\x23\x88\x1b\x36\x9b\x09\x6e\xfd\x7b\xe5\xc7\xb8\x0f\x15\x52\x5b\xc5\x60\x68\x50\xc9\xb2\xd2\x34\xd7\x8b\x5d\x6e\x35\x04\x27\x91\x8c\xf4\x3f\x63\x8f\x73\xbf\x00\x4d\x47\x58\x4f\x60\xb8\x50\x3d\xd0\xbc\x9d\x42\x37\x9f\x21\x82\x2c\xd8\x3f\x9c\x71\x5a\xd9\x28\x0d\x8b\xe4\xc0\x52\x12\xd3\xdd\xb5\x8d\x47\xab\xcc\x68\xbb\x69\x81\x9b\xba\x0e\x4d\x89\xa6\x08\x7f\x56\xff\xa8\x16\xe0\x6d\x5f\xe6\xc3\x09\x74\x07\xd2\xce\x60\xf1\x87\x58\xdb\x3d\x76\xb3\x1c\x18\x94\x87\x8e\xda\x64\xff\x66\x3e\x47\xf1\x54\x54\x09\x1f\x41\xd5\xf9\x6a\xab\x40\x5c\x0b\x8e\xbe\x53\xba\xe8\x31\x52\x60\x2c\x94\x08\xd3\xd7\x4a\xa2\x2d\x2c\x58\xae\xe4\xeb\xa5\xa6\x61\x59\xa4\xc6\x3d\xab\x55\x0d\x2d\x21\x59\x28\x31\xe3\x8f\x18\xd8\xbc\x32\xa0\xde\xc5\x7d\x23\xeb\x92\xfc\x9f\xfd\x49\x2e\x34\xc4\x80\x6f\xbe\x75\x2b\x4e\x81\x58\x76\x40\xca\x47\x0c\xf9\xa5\x3b\xf1\x40\xf5\x0c\x5e\xaf\x93\x4a\x98\xd1\x84\x73\x60\x2f\x5f\x54\x72\x38\x1f\xa2\x6a\xa2\xa7\x58\x6d\x53\x2a\xb8\x9f\x79\x06\xed\xde\x01\xa5\xc5\xf2\x52\xb9\x4a\xbf\x65\x56\x38\x77\xce\x68\xc4\x9a\x05\xa1\x43\xe3\xf8\x64\x43\x88\x4d\xbe\x1f\x99\x1e\xaa\xab\x21\x51\x6c\x8b\x89\xeb\x24\x27\x18\xdd\x6e\xe3\xdc\x92\x6f\x7c\x8a\x5a\x0f\x44\x33\xff\x94\xf2\x43\x7a\xa8\x5b\x0a\xed\x40\x49\x56\x21\x24\x61\x12\xcb\x43\x9b\xfd\x12\x6a\xfc\x2d\x8d\x1d\x43\x85\xa4\xee\x91\x77\x7b\x10\xbb\x69\x16\x3d\xe9\xef\x0d\xdb\x0b\xc2\x3c\x9c\x0a\x8c\x75\xfd\xe9\xe2\x87\xd2\x7f\xea\x56\x1e\x6c\x91\x84\x0a\x3a\xec\x20\x17\x9e\x10\x15\x0e\xd1\x4e\xb2\xe8\xd2\xc9\x74\x8d\xdf\xdf\x43\x4c\xcb\xf3\x83\xaa\x17\xb9\xe0\xa1\x18\x33\x93\x0e\xcd\x13\x20\xa0\x82\x6b\xe8\xca\xb0\x5b\x0c\x4e\x84\x4b\xd2\x08\x75\x0a\x3b\xe0\x64\x71\x12\xdd\x27\x09\x2e\x6c\x61\x1b\xa7\x0a\xf7\x5b\xc3\x85\xae\xfa\xfb\x46\xc0\x0f\x93\x88\xd5\x36\x38\x08\x49\xd9\x0e\x50\x36\x69\x07\x6d\x45\x23\xe4\xd8\x0f\x37\xc1\x65\xb2\xf1\x7c\x2e\xa2\x8a\xcb\xc3\x0f\x47\xaf\x60\x1b\xb4\x81\x6f\x95\xd1\xd7\xd7\x1f\xf9\xfd\xa6\x09\x23\xf4\x9f\xac\x44\x35\x6f\xe3\xd9\x4b\x64\x01\xd6\xfd\x77\xc2\x93\xcd\x75\x10\x6a\x8c\x37\xf9\x79\x4e\xe4\x58\xb4\xbe\x89\xd0\xda\x63\x28\x31\x32\x87\x38\x75\x9c\x2a\x65\xd4\xba\x66\x79\xc3\x59\xcf\x13\x43\x49\x33\x11\x46\x51\x50\x81\xef\x2a\xde\x96\x16\x22\xb3\xea\xdf\x5b\xba\x84\x1d\x2a\x12\xba\xb7\xd6\x17\x4d\x14\x0c\x31\x23\xb6\xaa\xf8\x42\xac\xb1\xe3\x98\x63\x57\xac\x6e\xbb\x71\x92\xb5\x91\x0a\x59\x36\xdf\x95\x9c\x0d\x80\xa1\x5e\x5f\x8b\xb9\x98\x0a\x71\x6a\x71\x85\x2d\x68\xb9\x2e\x64\xe5\xae\x00\x92\x17\xdf\xea\x90\x41\xcd\x9d\x90\xb7\x27\x44\x20\xcf\x43\x31\x49\x58\xf4\xc9\xd3\x3f\xfa\x73\xc9\x54\x24\x3c\x0f\xc0\x3a\xdf\x16\x16\x03\xa3\xac\xb4\x69\x88\x73\x1a\x71\xb2\x22\x3d\x74\x59\x6a\xa7\xc6\x69\xac\xee\x80\xca\x9a\x2f\xc0\x83\x82\xd7\xba\x04\x1b\x65\x56\x10\x9f\xdb\x44\x26\xed\x83\x32\x23\x5a\x1b\x08\x5f\x1d\xd4\x68\x9f\x22\x4a\x71\xb1\xdf\xe9\x95\x36\x14\x61\x5c\x83\x2a\xd2\x9f\xf4\xdb\x7b\xaa\x4c\x1a\x13\x1c\x76\x21\x47\xae\x30\x4c\xb9\x4d\x53\x08\x72\x50\xbf\xa7\x00\x0e\xcd\xaa\xe5\x3a\xb0\x74\x55\xdf\xe6\xcc\xb7\x23\x70\xd4\x8c\x95\xab\x61\xb6\x68\xbe\x1c\x4b\xfc\x99\xdc\x4c\xac\xae\x5e\x20\x01\x7b\x63\xf4\xb5\x98\x1a\x2e\x87\x6e\x7a\xf4\xa5\x17\x78\xda\xf1\x5b\x46\x47\xcd\x7f\x00\x07\x66\x49\x1f\xf2\xd7\x45\xa4\x8b\x9f\x10\x3d\x44\xca\xd8\x89\x8f\xa7\x8b\xeb\xd9\x43\xf2\x95\x62\x67\xdf\x29\x85\x19\xc2\xd6\xef\x66\xec\xcb\x39\xf4\xba\xbb\x61\xb8\xe8\x45\x51\x46\x0a\x0c\xe0\x83\x0e\x90\x85\xc5\x70\xb1\xc9\x8e\x4f\x2a\xcd\x4f\x02\x97\xc0\xe8\x20\xf7\x65\xca\x6b\x72\xe1\x92\x42\x26\xb7\x57\x87\x70\xc9\x6c\xea\x2a\x2b\xfd\x31\xbd\xac\xed\x92\xf3\x89\x57\x06\x25\x4d\x20\x29\xed\x0b\x7d\x3b\xaa\xa7\xf1\xb8\xb0\x28\xba\xa8\xeb\x31\x48\x97\xdd\x0e\xd2\x33\x46\xe0\x3c\xf9\x70\xa7\x69\x5a\x2f\xc2\xa0\x55\x54\x64\xa4\x2d\x32\x6c\x0b\x0a\x5e\xbe\x12\x25\xfb\x46\x3a\xf0\x1c\xf3\xac\xa8\x20\x84\x1e\xdb\x1a\x39\xae\xc0\x5a\x23\x94\x2c\x7a\x5e\x04\x46\x69\x93\xb6\x9a\x59\xb1\x11\x80\x56\x82\x2c\xf8\x94\x05\x3c\x23\xdf\xae\x1d\x2a\xc5\x8d\x3b\x10\x3d\x23\xda\x01\xc8\x8a\xa2\xfa\x03\xf7\xca\x0b\xdd\x86\xd5\xfe\xac\xe5\x26\x9e\x15\x7d\x72\x57\xf6\x5a\x64\xc1\xe1\xba\xb2\x27\xcc\xa2\x12\xc5\x97\x75\xea\x73\x7d\x6b\x91\xaf\x2a\x91\x63\xcd\x3e\xf6\xf7\xda\x04\xa2\x4a\x53\xda\x53\xed\xa3\xc7\x5d\xf6\xde\x3f\xa2\xf0\x5e\x7a\xc1\xf3\x0e\x2c\xd8\x5d\xfd\xed\x77\x42\xbe\x0a\x30\xfe\x29\xa7\xb4\x67\xd0\x4b\x48\x2e\x24\xbc\x9e\x41\xf3\x17\xd8\xf4\xf4\x03\x03\xfc\xcd\xe7\x63\xb6\xcf\x76\xe9\x2a\xb9\x5b\x87\x19\x5d\x27\x59\xf3\xee\x50\x42\xeb\xa2\xf6\xe9\x7b\x05\x23\xab\x71\x65\x47\x07\xa4\xfb\x51\x2f\xdc\x84\x56\x59\xf4\xab\xf8\x90\x37\xed\xe1\x7c\x00\x9c\x2c\x24\x72\x6a\xfa\xb2\x16\x1b\xdd\x0a\x13\x35\xf2\x91\x03\x0e\xec\x18\xc3\x78\x3b\x2a\x2c\x10\xee\xd1\x4e\xb2\x48\xd5\xd7\xf4\x90\xae\xe8\xa4\x11\xaa\x4c\xaf\x01\x5b\x73\x1f\xe6\x9e\x51\x80\x47\xd9\x12\xba\x0b\x9d\x97\x5d\xf3\x96\xe1\x9a\xaf\xdd\xd6\xdd\xa1\xd9\xbe\xd8\x88\xf9\xd0\xe7\xe9\x68\x78\xdf\xc5\xa6\x41\xe4\xfe\x10\x5b\x48\x60\x74\xdf\x63\x71\x52\x77\x82\x54\x5c\xaa\xdf\x00\x9f\x4c\x44\x05\x4b\xae\xba\x10\x4f\x60\x27\x78\x11\x0e\xd7\xea\xc7\x9f\x5a\x36\xba\xe3\xb4\xad\x97\xf9\x57\x4b\xf0\xda\xa9\x0c\x14\x5e\x7d\x3e\x93\xd0\x03\x8f\x41\x3b\x7d\x15\xa2\x5e\x61\x9f\x05\x4c\x82\x72\x9a\xef\x9d\x8c\x31\x8b\x91\xb0\xf9\x2f\x61\x47\x62\x16\x88\x96\x73\x6d\x6a\x17\x7b\x43\x1b\xef\xca\xe2\x14\xb5\x25\x8d\x3d\x4f\xc7\xad\x21\xf1\xd9\x0b\xaf\xdf\xd0\x42\xd9\x80\x03\x01\xc3\xd1\x2a\x55\xaf\x50\x29\x57\xbd\x9c\x45\x1f\xcf\x14\x92\x1e\x34\x66\x04\x3a\xe3\xd6\x07\x12\xbe\xc8\x27\xa6\x25\x13\xc7\xe8\xed\x56\x8e\x37\x2c\xc6\xea\xce\xf8\xd4\x6d\x73\xa7\xe7\x80\xdd\xd2\xc5\xbb\xb2\xb7\x83\x13\xbb\x9b\xd3\x59\xb2\x20\x2b\x3d\x2d\x76\xc9\xbf\x82\x21\x3c\x69\x3f\xd0\x14\x0d\x15\x43\x0c\x11\x41\x86\x41\xfa\xf9\x97\xf2\xc5\x55\x9a\x99\x22\xc1\x4b\xe3\x26\xc0\xb3\xae\x8f\x87\xe3\xe6\x57\x74\x9a\x7b\x63\xb2\x33\x34\x5b\x6c\x9d\x0c\x31\x6f\x97\xf1\xf0\xb1\x14\x13\x60\xa6\x07\xc1\x05\xd5\x49\x2d\x70\x11\x21\xb3\x6e\xdb\xff\xbc\xe1\x65\xc5\xdb\xa8\x79\x40\xee\x85\x99\xa7\xba\x59\xdb\x21\x81\x06\x85\xc6\x12\xf5\xee\x51\x58\x1e\x6e\xe5\x26\xd7\x6a\xf6\x2a\xdc\x85\xa0\xbb\x8c\xb3\xab\x47\x5f\xe3\x9f\x07\x87\x66\xdf\xce\x07\xa9\x47\xb1\x92\xa0\x6f\x80\x32\x65\x1c\x3d\xf1\xb8\xb4\x97\x41\xb8\x98\x30\x16\xd5\x25\x7e\x5b\x13\xe9\x1e\xea\x14\xec\x81\x4d\xbd\xd1\x2e\x57\xcd\x0b\xbb\xbf\x80\x59\x3e\x25\xa6\xfb\x5c\x86\x39\x2c\x28\xb2\x02\x3b\x60\xf2\x75\xc4\x0d\xeb\x83\x30\x49\x74\x03\xc3\xf3\x18\x99\xc4\x5a\xf6\x01\x37\x4e\x3c\xf9\x08\xd8\x07\xdb\xeb\x57\x82\x0f\x0e\x1d\xd5\x10\xa1\xbe\x8e\xbc\x32\x3a\xf1\x7d\x32\x50\x7e\x13\xf2\x72\x01\x9f\xda\x0d\xe9\x1d\x35\x5f\x51\xe8\x35\xcd\x23\x4d\x3d\xf2\x36\x14\xdc\xa4\xe7\xa6\x26\x5e\xd5\x28\xb6\x1e\x55\x1b\x8a\x1f\xc6\xae\x5d\xe2\x07\x4d\xac\xbf\xce\xac\xba\x50\xb2\xcf\x7f\x4f\x08\xd0\x6d\xe7\xc0\x0b\x47\x81\x39\xdc\x7b\xa0\x0c\x0e\xd7\x64\x73\xc9\xe4\x2b\x7c\xbe\xf5\x9c\x5b\x24\x71\xc8\x5c\xe3\x1c\x10\xd6\x14\x2b\x83\x2d\xaa\xca\xcf\x81\x02\x26\xda\x32\xc7\x74\xc4\x74\x05\xa8\xfa\xfd\xda\xd7\x3d\x2b\x98\x59\xe6\x52\x3a\x4a\x64\x19\xf2\x13\x29\x07\x58\x89\x27\xd5\x45\xfa\x55\x35\x7b\x5d\xd0\xb5\x37\x58\x1f\xcf\xee\x77\x6f\x37\x18\x09\xcb\x76\x2c\x5e\xb1\x7a\x19\x03\x7a\x08\xbd\xa0\x0e\xcd\x05\xaa\xac\x5a\xa9\xbe\xdf\xde\xcc\x20\x2a\x71\x7d\xe2\x7a\x07\x12\xf9\xf4\xf1\x48\x1c\x87\x25\x4a\xe5\xaf\xe4\xe0\x92\xba\xcc\xf1\xa5\xf5\x3c\x0f\x95\x4b\x78\xef\x4f\x08\xfc\x28\xcb\xb5\x2e\x9d\x67\x5d\xce\x1f\x4b\x81\x44\x32\xc3\x61\xdc\x10\xb6\xdf\x2d\x57\x5e\x7f\x2d\x11\xf1\x9c\xcf\xe8\x03\x89\x87\x36\xb2\xad\x9c\x5f\xce\x36\xc5\x49\xa4\x89\xe8\x14\x3a\x14\x0c\x8c\xc1\x6a\xd3\x6c\x0d\xe2\x5b\xa2\xdc\x74\x89\xf4\x3f\x37\x70\x0f\x4c\x9b\xcc\xcd\xa4\x56\x3f\x2f\x65\x32\x09\x16\xda\x0d\x09\x53\x1f\x0d\xda\x34\x84\x94\x24\xc1\x57\xc2\x6c\x1e\x19\x1f\x0e\x01\x10\xd7\x7c\xd3\x58\x4c\x28\xad\xdf\x41\x50\x7a\x33\x06\x8e\x8c\x43\x56\xde\x63\xa4\x21\xe2\xd2\xc1\x25\x18\x31\x05\x3c\x02\x70\x87\xd7\xe9\x55\x1f\x30\xd9\x53\x7f\x4e\x13\xf3\xc4\x15\x88\x6f\x80\xd7\x51\x38\xc7\x0c\x7a\x4b\x62\xbe\xa5\x8e\x91\xbf\x41\x0d\x60\x84\x0e\x6c\x7b\x8b\x38\x45\x7c\x31\x35\x2c\x71\x71\x69\x4d\xa7\xaa\xbd\xe9\xb4\x09\xa2\x7b\x15\x57\x4b\xe7\xfd\x5c\xc9\x12\x1b\x01\x45\x7a\x7f\x3a\x55\xad\xe6\x0b\x2d\x0e\x51\x7a\x9e\x3a\xc4\xfa\x80\x4f\x91\x28\xeb\xe4\x0e\x87\xaa\xf7\x61\x2b\x48\xfc\x14\xa5\x9a\x33\xca\xe0\xa6\x52\xa9\xf2\xdf\x2f\xf9\xdc\x15\xbe\xc3\x54\x00\x68\x3c\x59\x3d\x67\xa4\x13\xe9\xcb\x3d\xf6\x2c\x10\x82\x16\x11\xbe\x27\x58\xad\xec\xdf\xf4\x3a\xb3\x93\xca\xb1\x2e\x7f\x6e\xbc\x61\x1e\x55\xc9\xe6\x95\x79\x27\x8e\x1e\x15\x28\xa6\x55\xbb\x7f\x00\x68\xe0\x0f\x05\x68\x6c\xb4\xb3\x3c\x23\x1e\xf5\x08\xc4\x54\x30\x38\x61\x1a\xbe\x2d\x5d\xa9\xfa\xfa\xba\xda\x46\xdb\x90\x0e\xc4\x7a\x3f\xc2\x77\xcf\xc5\x87\xe5\xca\x78\x14\xf9\x80\x6f\x27\x2c\x80\xc3\xe1\x8f\x61\x75\xd1\x40\x8a\x9b\x19\xa9\x2e\x71\xba\x16\x09\xa6\xc5\x1d\x8d\x51\xa6\x54\xa8\x19\x43\x73\xc8\xe3\x54\xf7\xb3\xb1\xf8\x37\x44\xe8\x7a\x86\x8a\x30\x36\xac\x65\x19\xc0\xb2\xdc\x81\x97\x34\x7c\x4a\x1e\x0a\x99\x3b\xe0\x8a\xea\x10\xe2\x2b\x6a\x66\x74\x15\x0f\x9e\xb9\x2c\x81\xf2\xb6\x59\xe6\x8a\xe3\xd7\x5b\x7f\x6b\x10\xbc\x7e\x91\x39\x79\x24\x64\x86\x25\x74\xb7\x43\x24\x33\x80\x00\x4a\xce\x86\xb9\x04\xa3\xd1\x60\x59\x99\x67\xc9\xbe\x5f\x92\xae\xbf\xa9\x98\x92\xca\x6e\xf0\x66\xc1\xc1\x9c\xaf\x81\xba\x0f\x6a\x97\xf3\x82\x6e\x39\xb5\xb9\x06\x43\x58\xe1\x1c\x7a\x39\x7c\x80\xc6\x9e\x9a\xc8\xb7\xb7\x0f\xf7\x40\x45\xee\x77\x83\x3e\x85\x6d\x68\xd6\x6e\xb8\x87\x72\x3d\x53\x59\x36\x38\xdf\xab\x6a\x04\x63\x53\x0c\x7a\xfa\x11\xfc\xe4\x7c\x8d\x81\x2a\x88\x95\x01\xfe\x51\x0e\xd1\x12\xfe\x5b\x45\xfe\x1f\x00\x00\xff\xff\x12\x30\xf9\xa2\xab\x0c\x00\x00")

func resVmKeyId_rsa_testBytes() ([]byte, error) {
	return bindataRead(
		_resVmKeyId_rsa_test,
		"res/vm/key/id_rsa_test",
	)
}

func resVmKeyId_rsa_test() (*asset, error) {
	bytes, err := resVmKeyId_rsa_testBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/key/id_rsa_test", size: 3243, mode: os.FileMode(384), modTime: time.Unix(1624238435, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmKeyId_rsa_testPub = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xc7\xb9\x12\xb2\x38\x00\x00\xe0\x7e\x9f\x62\x7b\x66\x07\x23\x88\x58\xfc\x45\xb8\x04\x8f\x70\xca\xd5\x25\x06\x83\x88\x62\x38\x84\xf0\xf4\x3b\x7f\xf9\x0d\x43\xfd\x5f\x3f\xe0\x7f\x21\x84\xd0\x50\xd0\x8a\x4d\x20\xee\x5b\xfb\x2f\x2d\x18\x42\x03\x42\x68\xc2\xd0\x3c\xec\xa3\x0b\x2d\x72\x0e\xa4\x93\xd3\xc3\x35\xf8\x78\x01\x83\xf5\x6f\x53\xe3\x6e\x4c\xf8\x21\x8d\x10\xbc\x8f\x1d\x2a\x8f\x09\xcf\xfa\x20\x1a\xeb\x55\x58\x80\xe4\xa9\x11\x9f\xe7\x55\x13\x79\x60\x4c\x5a\xb5\xc5\x56\x66\x03\x51\x0c\x9f\x83\x0e\x61\xf6\x7c\x1f\xbb\x9d\x24\x5c\x39\xa2\x37\x92\xa5\xea\x04\xca\xf1\xb4\xaa\xb3\xee\x4f\x12\xb1\x8a\xef\xb5\x3d\x2a\x3f\xbc\x5c\x94\x16\x7d\x7d\xc0\xec\x49\x07\xfc\x9e\xe1\xee\x26\x87\x29\x25\x22\x31\x45\xa5\x5d\xab\x0f\xf6\xe7\x16\x19\x2d\x94\xd7\x21\x9c\x93\xe8\x39\x9e\x35\xb3\xf7\x83\x00\x30\x3b\x10\xc9\x7e\x96\x8a\xcd\x59\x8d\x6d\x2d\x7f\xd8\xd0\xdd\x21\x49\xed\x8b\x3d\xcf\xd1\xd7\x73\x87\xcb\x98\x41\xc4\xae\xac\x3b\x9b\xc2\xda\xb3\xd6\xd7\xb2\xb0\x8a\x72\x6f\x7c\xd3\x99\xe6\x77\x3e\xc1\x7c\x56\xa8\xdf\x1b\x14\x38\xaf\x79\xd8\x28\xdd\xcb\x3d\x0f\x5b\x13\x07\xaf\x9b\x42\xde\x9f\xc6\x8b\xae\xaa\x57\x91\xd2\x85\x0e\xb8\x29\x30\x3d\xa9\xbb\xfa\x61\x95\x09\x05\x93\x88\x7f\xcd\x6f\x4f\xf9\x5e\xa7\x2c\x0a\xcf\x3c\x96\xeb\x6b\x6d\x0f\x1e\x77\x2a\xe8\x7f\xca\xbb\x2d\x47\xce\xd4\x35\x1c\xcb\x97\xb7\x79\xca\x4f\x62\x50\xe7\x74\x76\x54\x71\xf0\xfd\x6d\xa4\x6f\xa0\x97\x4a\x43\xaa\xf1\xd7\xdd\x31\xdb\x7e\xbd\x6d\x5f\x57\x3f\x29\x4b\xac\x1b\x89\x6e\x50\xc0\x88\xc0\x96\x79\xe9\x49\xb5\x90\x8f\x29\xf3\x26\xc1\xab\x3d\x49\x0b\x05\x58\x0f\xdf\x69\xf6\xba\x9c\x74\x72\xf9\xba\xa5\xa1\xfb\x3e\x19\x6e\x60\x46\x34\xa2\x05\xc6\xe8\xbb\x7b\x4c\x54\xe3\xde\x8e\x1c\xe6\xdb\x13\xa4\xae\xe3\xea\xe6\xfc\x52\x04\xeb\x03\x37\xd4\xfa\x5c\xf1\xec\x67\x75\x74\x9e\x11\xb9\x0c\x5f\xf5\xb9\x48\xaa\xb1\xd0\xf0\x81\xb1\xa2\x3a\xb1\x2c\x8f\x71\x99\x29\x9d\x85\x79\x48\x84\xdb\x38\x5b\x35\x6a\xa5\x43\x53\x34\x16\xef\xeb\x30\x22\x5b\xd6\x4b\x6f\x16\x14\x08\x0e\x5d\x85\x37\x8a\xd2\xb4\xf1\xb7\xf2\x7c\xe7\x13\xca\x1a\xdb\xd8\xb9\x48\xe9\x83\xf9\x4b\x8c\xca\xd7\xdd\xd1\xc6\xb8\x17\x66\xee\xba\xf9\xae\x01\xf7\xd8\x14\x85\x9c\xf7\x83\x7a\x90\x4e\xef\x44\x5a\x84\x87\x7e\x74\xcf\x56\x8d\xb3\x7d\x3d\xb5\x4b\x06\x9d\x31\x62\xae\xf8\x69\xc8\x47\xc8\x03\x87\x14\x78\xbd\x47\x10\x68\x1f\x1b\x3f\xad\xbf\x72\xd1\x1e\xe7\x3f\x7f\xfe\xf9\x3f\x00\x00\xff\xff\xce\x5e\x03\xeb\xd5\x02\x00\x00")

func resVmKeyId_rsa_testPubBytes() ([]byte, error) {
	return bindataRead(
		_resVmKeyId_rsa_testPub,
		"res/vm/key/id_rsa_test.pub",
	)
}

func resVmKeyId_rsa_testPub() (*asset, error) {
	bytes, err := resVmKeyId_rsa_testPubBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/key/id_rsa_test.pub", size: 725, mode: os.FileMode(384), modTime: time.Unix(1624238435, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmZhMessagesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xd1\x6e\x12\x41\x14\x86\xef\x79\x8a\xc9\x36\x9b\xde\xf4\x09\x7a\x69\x7c\x0b\x63\x86\x11\xa6\xb8\xc9\xb2\x4b\xe6\xcc\x52\xd3\xa6\x09\x36\x8d\x54\x58\x14\x53\x5a\x2d\xb6\x95\x46\x0c\x78\xa1\xc4\xa8\x0d\x96\x25\x7d\x98\xee\xcc\xae\x57\xbc\x82\xd9\x1d\x8a\x98\xb8\x2c\x34\xd9\x6c\x32\x67\x4e\xfe\xef\x9c\x39\xe7\xdf\xcd\x20\xa4\x99\xc4\x2a\x38\xa4\x40\xb5\x4d\xa4\xed\x3c\xd5\x36\xa2\x58\x91\x02\x90\x02\x05\x6d\x13\x3d\xca\x20\x84\xd0\x6e\xfc\x47\x48\x33\xf2\x51\x9e\x13\xdd\xc6\xa9\x71\x90\x33\x62\x81\x49\xb8\x61\x5b\xd1\xad\x3f\xbe\x09\x5a\x7d\xe9\x56\x45\xe3\xed\xc4\x6b\x6b\x71\xda\xde\xc6\xff\x84\xc0\xc9\xe5\x28\x00\xe6\x36\x66\xb4\x60\x00\xa7\x2c\x51\x56\x7e\xef\x8b\x17\xae\x3c\x6c\x8a\xda\x07\x1d\x6e\x2b\xfb\x8b\x84\xb7\x88\x61\xae\xa0\x2a\xba\xdf\xc2\x1f\x9f\x74\x98\x78\xae\x38\x6a\x88\xeb\x96\x5e\x4e\x01\x00\x27\x8c\x63\xa0\xac\xbc\x40\x5c\x34\x07\xa2\xd6\x97\x67\x0d\x51\xbb\x14\xa7\x7d\x1d\xd0\x6d\x65\x5f\x7d\xcb\x14\x7f\x1f\xc6\x5c\x27\xbf\x5b\xa7\xe1\x60\xb0\xf4\x53\x19\x96\xc1\x71\xfe\x49\x32\xe8\xf0\x5c\xf4\xea\xc2\x3d\x79\xf8\xe0\xfe\x90\x1d\xa3\x84\x39\x05\x8e\x19\x05\xc7\xe4\xc9\xb0\x57\xf5\xc0\xfb\x2c\x7f\xd6\xc3\xc1\x71\x30\x3a\x92\x17\x67\x8a\x39\xf1\xdc\xe0\xfd\x57\xd9\xa9\xae\xeb\xb0\xae\x0e\x62\x7c\x1c\x57\x22\x4f\xaa\xfe\xe8\x6a\x1a\x9f\x96\xb5\x96\x36\xc6\xbb\xba\x9c\x92\x69\x93\x3c\xde\x32\x4c\x0a\xc9\x8b\x3d\xac\xf9\x5e\x47\x71\x66\xe5\xac\xf8\x00\x25\xc2\x80\xde\xe1\x18\x85\x92\x6d\x41\xb2\x95\xc2\xde\x47\x79\xd1\xfc\x87\x1b\xaf\xe7\xaa\xf4\x29\x0f\x38\xe1\x4e\x5a\x7f\x41\xed\x4a\x56\x9e\xcf\x7b\x21\xb5\x37\xc3\xa4\x38\x6f\x6f\x5b\x11\x84\xe6\x93\xbd\x16\x77\xe0\x0f\xeb\xe1\x78\xbc\xac\x8f\xe7\xa5\x31\x90\xf2\x02\x79\x25\x1c\xb4\x0f\x14\x47\x07\xff\xe6\x5c\x7c\x79\xe7\x0f\xaf\x97\x9e\x0e\x7d\x46\x73\x38\x67\x17\x8b\xc4\x5a\xd0\xc6\xcb\x5e\x78\xe9\x8a\x37\x63\x7f\xd4\x55\x83\xc8\xea\x90\x9d\x6d\xa0\xe8\xfe\x9a\x9e\xd5\x70\xb2\xfa\x5a\x39\x9b\xc2\xdf\x66\xb6\x55\x98\xad\x03\xde\xb2\x59\x91\x24\x9b\x43\xe9\x06\xed\x03\x35\x1f\xd9\xf1\x84\xf7\x3a\x5a\xfc\xbf\x94\x0c\x42\x8f\x33\x7b\x99\x3f\x01\x00\x00\xff\xff\x0e\x89\x89\x8c\xe2\x05\x00\x00")

func resVmZhMessagesJsonBytes() ([]byte, error) {
	return bindataRead(
		_resVmZhMessagesJson,
		"res/vm/zh/messages.json",
	)
}

func resVmZhMessagesJson() (*asset, error) {
	bytes, err := resVmZhMessagesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/zh/messages.json", size: 1506, mode: os.FileMode(420), modTime: time.Unix(1622611937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resVmZhUsageTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func resVmZhUsageTxtBytes() ([]byte, error) {
	return bindataRead(
		_resVmZhUsageTxt,
		"res/vm/zh/usage.txt",
	)
}

func resVmZhUsageTxt() (*asset, error) {
	bytes, err := resVmZhUsageTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/vm/zh/usage.txt", size: 0, mode: os.FileMode(420), modTime: time.Unix(1615634507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/vm/docs/docs.go":        resVmDocsDocsGo,
	"res/vm/docs/swagger.json":   resVmDocsSwaggerJson,
	"res/vm/docs/swagger.yaml":   resVmDocsSwaggerYaml,
	"res/vm/en/messages.json":    resVmEnMessagesJson,
	"res/vm/en/usage.txt":        resVmEnUsageTxt,
	"res/vm/key/id_rsa_test":     resVmKeyId_rsa_test,
	"res/vm/key/id_rsa_test.pub": resVmKeyId_rsa_testPub,
	"res/vm/zh/messages.json":    resVmZhMessagesJson,
	"res/vm/zh/usage.txt":        resVmZhUsageTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		"vm": &bintree{nil, map[string]*bintree{
			"docs": &bintree{nil, map[string]*bintree{
				"docs.go":      &bintree{resVmDocsDocsGo, map[string]*bintree{}},
				"swagger.json": &bintree{resVmDocsSwaggerJson, map[string]*bintree{}},
				"swagger.yaml": &bintree{resVmDocsSwaggerYaml, map[string]*bintree{}},
			}},
			"en": &bintree{nil, map[string]*bintree{
				"messages.json": &bintree{resVmEnMessagesJson, map[string]*bintree{}},
				"usage.txt":     &bintree{resVmEnUsageTxt, map[string]*bintree{}},
			}},
			"key": &bintree{nil, map[string]*bintree{
				"id_rsa_test":     &bintree{resVmKeyId_rsa_test, map[string]*bintree{}},
				"id_rsa_test.pub": &bintree{resVmKeyId_rsa_testPub, map[string]*bintree{}},
			}},
			"zh": &bintree{nil, map[string]*bintree{
				"messages.json": &bintree{resVmZhMessagesJson, map[string]*bintree{}},
				"usage.txt":     &bintree{resVmZhUsageTxt, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
